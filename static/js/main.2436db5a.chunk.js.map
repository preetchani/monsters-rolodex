{"version":3,"sources":["components/card-list/card-list.styles.js","components/card/card.styles.js","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.styles.js","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Grid","styled","div","Wrapper","Card","props","src","monster","id","alt","name","email","CardList","monsters","map","SearchBar","Search","placeholder","handlechange","type","onChange","App","state","searchField","fetch","then","response","json","user","setState","this","filterMonsters","filter","toLowerCase","includes","className","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGaA,EAAKC,IAAOC,IAAR,2JCDJC,EAAUF,IAAOC,IAAV,yX,OCAPE,EAAM,SAACC,GACpB,OAAO,eAACF,EAAD,WACH,qBAAKG,IAAG,+BAA0BD,EAAME,QAAQC,GAAxC,0BAAoEC,IAAI,aAChF,6BAA4BJ,EAAME,QAAQG,MAAjCL,EAAME,QAAQC,IACvB,4BAAIH,EAAME,QAAQI,YCHTC,EAAW,SAAAP,GACxB,OAAO,cAACL,EAAD,UACFK,EAAMQ,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJVO,EAAUd,IAAOC,IAAR,wNCCTc,EAAS,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAChC,OAAO,cAACH,EAAD,UACH,uBACAI,KAAK,SACLF,YAAaA,EACbG,SAAUF,OC0BHG,E,kDA5Bb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTf,QAAQ,GACRgB,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACtB,QAAQqB,S,oBAExH,WAAS,IAAD,OAEN,EAA4BE,KAAKR,MAA1Bf,EAAP,EAAOA,QAAQgB,EAAf,EAAeA,YACTQ,EAAexB,EAAQyB,QAAO,SAAAzB,GAAO,OAAEA,EAAQG,KAAKuB,cAAcC,SAASX,EAAYU,kBAC7F,OACE,sBAAKE,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAlB,YAAY,iBACZC,aAAc,SAAAkB,GAAC,OAAE,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WAErD,cAAC,EAAD,CAAUzB,SAAUkB,W,GAvBVQ,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2436db5a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nexport const Grid=styled.div`\r\n    width: 85vw;\r\n    margin: 0 auto;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 20px;\r\n  `\r\n  ","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #99e9e9;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  padding: 25px;\r\n  cursor: pointer;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  backface-visibility: hidden;\r\n  transform: translateZ(0);\r\n  transition: transform 0.25s ease-out;\r\n  :hover{\r\n    transform: scale(1.05);\r\n  }\r\n`","import React from 'react'\r\nimport { Wrapper } from './card.styles';\r\nexport const Card =(props)=>{\r\nreturn <Wrapper>\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} alt=\"monsters\" />\r\n    <h2 key={props.monster.id}>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n</Wrapper>\r\n};","import React from 'react';\r\nimport { Grid } from './card-list.styles.js';\r\nimport { Card } from '../card/card.component.jsx';\r\nexport const CardList = props=>{\r\nreturn <Grid>\r\n    {props.monsters.map(monster=>\r\n    <Card key={monster.id} monster={monster}/>\r\n    )}\r\n    </Grid>\r\n};","import styled from \"styled-components\";\r\n\r\nexport const SearchBar=styled.div`\r\n        \r\n input{\r\n  border-radius: 30px;\r\n  outline: none;\r\n  padding: 10px;\r\n  height: 40px;\r\n  width: 150px;\r\n  line-height: 30px;\r\n  margin-bottom: 30px;  \r\n  text-align: center;\r\n }\r\n`;","import React from 'react'\r\nimport { SearchBar } from './search.styles';\r\n\r\nexport const Search = ({placeholder,handlechange})=>{\r\n    return <SearchBar>\r\n        <input \r\n        type=\"search\" \r\n        placeholder={placeholder}\r\n        onChange={handlechange}\r\n        />\r\n    </SearchBar>\r\n}","import React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { Search } from './components/search/search.component';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      monster:[],\n      searchField:\"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response=>response.json()).then(user=>this.setState({monster:user}));\n  }\n  render(){\n\n    const {monster,searchField}=this.state;\n    const filterMonsters=monster.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <Search\n        placeholder=\"search monster\" \n        handlechange={e=>this.setState({searchField:e.target.value})}\n        />\n        <CardList monsters={filterMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}